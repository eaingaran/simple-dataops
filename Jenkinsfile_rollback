def builds = []
def desiredVersion
pipeline {
    environment {
        isRollbackSuccess = 'Success'
    }
    agent any
    tools {
      maven 'maven'
      jdk 'jdk1.8.0'
    }
    stages {
        stage('FindSuccessfullBuilds') {
            steps {
                script  {
                  def job = jenkins.model.Jenkins.instance.getItem("simple-dataops")
                  job.builds.each {
                      def build = it
                      if (it.getResult().toString().equals("SUCCESS")) {
                          it.badgeActions.each {
                                   builds.add(build.displayName[1..-1])
                           }
                      }
                  }
                  builds.unique()
                }
            }
        }
        stage('RollbackSQLForSuccessfulBuilds') {
            steps   {
                script  {
                    desiredVersion = "${ROLLBACK_VERSION}"
                    
                    for (build in builds)    {
                        if (build != desiredVersion)   {
                            println "Rolling back build " + build
                            file_name = 'sample-devops-0.0.1.' + build + '.tar.gz'
                            file_url = '"http://34.221.12.98:8081/artifactory/libs-snapshot/xyz/aingaran/dataops/' + file_name + '"'
                            sh 'rm ' + file_name + ' ||:'
                            sh 'curl -uadmin:AP3k8uCck9Xxw1GG3i3yz2rq4Kz ' + file_url + ' -o ' + file_name
                            sh 'tar -xvzf ' + file_name
                            if (isRollbackSuccess.equals('Failed')) {
                                sh 'python3 tools/rollback_sql.py localhost admin password build/rollback.sql'
                            } else  {
                                isRollbackSuccess = sh(script: 'python3 tools/rollback_sql.py localhost admin password build/rollback.sql', returnStdout: true)
                            }
                            sh 'rm ' + file_name
                            sh 'rm -rf build/'
                            sh 'ls'
                        } else  {
                            println "All scripts rolled back"
                            if(isRollbackSuccess.equals("Failed"))    {
                                println "There were few problems while rollback, but that shouldn't cause any issues..."
                            }
                            break
                        }
                    }
                }
            }
        }
        stage('PrintLog')   {
            steps   {
                sh 'cat execution.log ||:'
            }
        }
    }
}
